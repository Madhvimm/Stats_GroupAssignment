---
title: "Social Dimensions Analysis"
date: "`r format(Sys.Date(), '%d %B %Y')`"
format: 
  html:
    self-contained: true
    toc: true
    code-fold: true
editor: visual
execute:
  echo: true
  message: false
  warning: false
---

# Pre-amble

Before starting the cleaning, we import the required libraries and specify the preferred knitting options:

```{r}
#| label: setup 
#| output: false

# loading the required libraries
library(tidyverse)
library(survey)
library(srvyr)

# specifying the knitting options - to keep the output colors as they are
options(crayon.enabled = TRUE)
old.hooks <- fansi::set_knit_hooks(knitr::knit_hooks)


```

# Data Import

We start by importing the analysis-ready dataset.

```{r}
#| label: data_import 

# reading in the working WVS data
wvs7_working <- read_csv('../data/csv/wvs7_working.csv')

# also reading in the time series WVS data:
#wvs_trend_working <- readRDS('../data/rdata/wvs_trend_working.Rda')
```

# Descriptive Analysis

## Sample Distribution

Most of our observations in the WVS Wave-7 came from Canada, Indonesia, China, United States and Turkey.

```{r}
#| label: sample_dist
#| fig-cap: "Canada, Indonesia, China, and United States contribute the highest number of respondents."

# plotting the by-country sample counts
wvs7_working %>% 
  filter(!is.na(country_alpha)) %>% 
  group_by(country_alpha) %>% 
  summarise(sample_count = n()) %>% 
  ggplot(aes(y = reorder(country_alpha, sample_count), x = sample_count)) +
  geom_col() +
  labs(
    title = "Canada, Indonesia, China, and United States contribute \nthe highest number of respondents.", 
    y = "Country", 
    x = "Observations"
  ) + theme_classic() + 
  theme(
  plot.title = element_text(hjust = .5),
  axis.text.y = element_text(size = 7)
  )
```

The following map plots the spatial distribution of the WVS-7 respondents.

```{r}
#| label: sample_dist_map

# getting the map data
world <- map_data("world")

# plotting the world map, overlaid with sample distribution:
ggplot() +
  geom_map(
    data = world, map = world,
    aes(long, lat, map_id = region),
    color = "white", fill = 'lightgray', size = .1
    ) +
  geom_point(
    data = wvs7_working,
    aes(long, lat, color = region),
    alpha = .5, size = 1
  ) +
  theme_void() +
  theme(legend.position = "none")
```

While the WVS over-represents countries in the population of interest, **the survey significantly under-represents China**.

```{r}
#| label: wvs_wb_pop_comparison

# first, we calculate the sample count and proportion of each country in WVS
wvs7_pop <- wvs7_working %>% 
  group_by(country_iso, country_alpha) %>% 
  summarise(sample_count = n()) %>% 
  ungroup() %>% 
  mutate(sample_prop = sample_count/sum(sample_count))

# then we get the world bank population count in 2017 
# (the latest avail.)
wb_pop <- world_bank_pop %>%
  filter(indicator == 'SP.POP.TOTL') %>% 
  select(country, `2017`)

# next, we merge wvs7_pop data with wb_pop data,
# so we compare the sample/pop proportion for same set of countries
wvs7_pop <- wvs7_pop %>% 
  left_join(wb_pop, by = c("country_alpha" = "country")) %>% 
  rename(pop_count = `2017`) %>% 
  mutate(pop_prop = pop_count / sum(pop_count, na.rm = T)) %>% 
  pivot_longer(
    cols = sample_count:pop_prop,
    names_to = "var", 
    values_to = "value"
  )

# visualizing the results
pop_sample_prop <- wvs7_pop %>% 
  filter(var %in% c("sample_prop", "pop_prop"), !is.na(country_alpha)) %>%
  ggplot(aes(x = value, y = country_alpha)) +
  geom_line(aes(group = country_alpha)) +
  geom_point(aes(color = var), size = 2) +
  labs(
    x = 'Proportion within 50+ country group',
    y = 'Country',
    title = 'China is significantly underrepresented in the WVS Survey.'
  ) +
  theme_classic() +
  theme(
    plot.title = element_text(hjust = .5),
    axis.text.y = element_text(size = 6)
  ) +
  scale_color_discrete(name = "Type", labels = c("Population", "Sample"))

pop_sample_prop
```

# Descriptive Analysis: Social, Economic, Religious and Political Dimensions

## 1) Data Preparation: Social Dimensions

We proceed to summarizing the social indicators of the `wvs7_working` dataset. First, we incorporate the survey weights into the mean/proportion calculations. We then use these weights to create a by-country summary of the social indicators.

```{r}
#| label: descriptive_soc_sum

# creating a by-country summary of the social indicators
wvs7_soc_sum <- wvs7_working %>%
  as_survey(weights = c(weight)) %>%
  group_by(country_alpha, region) %>%
  summarise_at(vars(important_fam:trust_diffnat), survey_mean, na.rm = T) %>% 
  mutate(
    across( c(-1, -ends_with("_se"), -starts_with("pos_"), -starts_with("neg_") ), 
           ~ . + 1.96*get(str_c(cur_column(), '_se')),
           .names = 'pos_{.col}'),
    across( c(-1, -ends_with("_se"), -starts_with("pos_"), -starts_with("neg_") ), 
           ~ . - 1.96*get(str_c(cur_column(), '_se')),
           .names = 'neg_{.col}')
         )
```

We then reshape the `wvs7_soc_sum` dataset to make it easier to visualize the results:

```{r}
#| label: descriptive_soc_sum_wrangle

# wrangling the soc_sum data to enable visualization
wvs7_soc_sum_wide <- wvs7_soc_sum %>% 
  pivot_longer(cols = important_fam:neg_trust_diffnat,
               names_to = "var",
               values_to = "value") %>% 
  mutate(
    type = case_when(
      str_ends(var, "_se") ~ "se", 
      str_starts(var, "pos_") ~ "ul", 
      str_starts(var, "neg_") ~ "ll", 
      TRUE ~ "coef"
    ),
    var = str_replace(var, "_se$|^pos_|^neg_", "")
  ) %>% 
  pivot_wider(names_from = type, 
              values_from = value) %>% 
  mutate(
    country_focus = ifelse(country_alpha %in% c('CHN', 'IND', 'IDN', 
                                                'VNM', 'USA'), 
                           'Focus Countries', 'Others')
  )

# printing the head of the wvs7_soc_sum_wide data
wvs7_soc_sum_wide
```

Then, we generate a global (cross-country) averages of the variables of interest to plot as reference in the cross-country tabulations.

```{r}
#| label: global_average

wvs7_global_avg <- wvs7_working %>% 
  as_survey(weights = c(weight)) %>% 
  summarise_at(vars(important_fam:trust_diffnat), survey_mean, na.rm = T) %>% 
  pivot_longer(cols = important_fam:trust_diffnat_se, 
               names_to = "var", 
               values_to = "value") %>% 
  mutate(
    type = case_when(
      str_ends(var, "_se") ~ "se",
      TRUE ~ "coef"
    ),
    var = str_replace(var, "_se$", "")
  ) %>% 
  pivot_wider(names_from = type, 
              values_from = value)

```

## 2) Descriptive Plots: Social Dimension 

Notes:

1\) For the purpose of our presentation, we only discuss one of the following plots from each of the four dimensions

2\) We filter only for countries in North America, South Asia and East Asia Pacific for our descriptive plots for cleaner graphs with high legibility.

3\) Our regressions however are run across all countries and we plot only for the countries of interest, with the US as reference.

```{r}
#| label: descriptive_soc_sum_indicators_1
#| code-fold: true

# filtering the soc_sum_wide df, then plotting the visualization
wvs7_soc_sum_wide %>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>%
  filter(var %in% c('important_fam', 
                    'important_fr')) %>% 
  mutate(var_desc = case_when(
    var == 'important_fam' ~ 'Family is important',
    var == 'important_fr' ~ 'Friends is important'
  )) %>% 
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha, 
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul), 
                width = .2) +
  geom_point(aes(color = country_focus), 
             size = 2) +
  tidytext::scale_y_reordered() + 
  facet_wrap(~var_desc, scales = 'free') + 
  geom_vline(data = (wvs7_global_avg %>% 
                       filter(var %in% c('important_fam','important_fr')) %>% 
                       mutate(var_desc = case_when(
                                var == 'important_fam' ~ 'Family is important',
                                var == 'important_fr' ~ 'Friends is important'
                              ))
                     ), 
             aes(xintercept = coef), 
             linetype = 'dashed') +
  labs(
    x = 'Proportion of respondents agreeing to the statement', 
    y = 'Country'
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 6)
  ) +
  guides(color = guide_legend(title = 'Region'))
```

```{r}
#| label: descriptive_soc_sum_indicators_2
#| code-fold: true

# filtering the soc_sum_wide df, then plotting the visualization
wvs7_soc_sum_wide %>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>%
  filter(var %in% c('neighbor_add', 
                    'neighbor_diffrace', 
                    'neighbor_imm', 
                    'neighbor_gay', 
                    'neighbor_diffrelig', 
                    'neighbor_drink')) %>% 
  mutate(var_desc = case_when(
    var == 'neighbor_add' ~ 'Drug addicts',
    var == 'neighbor_diffrace' ~ 'Different race', 
    var == 'neighbor_imm' ~ 'Immigrants', 
    var == 'neighbor_gay' ~ 'Homosexuals', 
    var == 'neighbor_diffrelig' ~ 'Different relig.',
    var == 'neighbor_drink' ~ 'Heavy drinkers',
  )) %>% 
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha, 
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul), 
                width = .2) +
  geom_vline(data = (
    wvs7_global_avg %>% 
       filter(var %in% c('neighbor_add', 
                         'neighbor_diffrace',
                         'neighbor_imm',
                         'neighbor_gay',
                         'neighbor_diffrelig',
                         'neighbor_drink')) %>% 
      mutate(var_desc = case_when(
        var == 'neighbor_add' ~ 'Drug addicts',
        var == 'neighbor_diffrace' ~ 'Different race', 
        var == 'neighbor_imm' ~ 'Immigrants', 
        var == 'neighbor_gay' ~ 'Homosexuals', 
        var == 'neighbor_diffrelig' ~ 'Different relig.',
        var == 'neighbor_drink' ~ 'Heavy drinkers',
      ))
  ), aes(xintercept = coef), linetype = "dashed") +
  geom_point(aes(color = country_focus), size = 1) +
  tidytext::scale_y_reordered() +
  facet_wrap(~var_desc, scales = 'free') + 
  labs(
    x = 'Proportion of respondents reluctant to have the group as neighbor', 
    y = 'Country',
    title = 'Love thy neighbors not: \nWhich group would you rather not have as neighbors?'
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 3), 
    plot.title = element_text(hjust = .5)
  ) +
  guides(color = guide_legend(title = 'Region'))
```

```{r}
#| label: descriptive_soc_sum_indicators_3
#| code-fold: true

# filtering the soc_sum_wide df, then plotting the visualization
wvs7_soc_sum_wide %>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>%
  filter(var %in% c('gender_child_suffer', 
                    'gender_jobs', 
                    'gender_hwife', 
                    'gender_exec')) %>% 
  mutate(var_desc = case_when(
    var == 'gender_child_suffer' ~ 'Working mothers \nmake pre-school child suffer',
    var == 'gender_jobs' ~ 'Men have more \nright to jobs than women', 
    var == 'gender_hwife' ~ 'Being a housewife \nis as fulfilling as working', 
    var == 'gender_exec' ~ 'Men make better \nexecutives than women'
  )) %>% 
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha, 
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul), 
                width = .2) +
  geom_vline(data = (
    wvs7_global_avg %>% 
     filter(var %in% c('gender_child_suffer', 
                       'gender_jobs', 
                       'gender_hwife', 
                       'gender_exec')) %>% 
      mutate(var_desc = case_when(
        var == 'gender_child_suffer' ~ 'Working mothers \nmake pre-school child suffer',
        var == 'gender_jobs' ~ 'Men have more \nright to jobs than women', 
        var == 'gender_hwife' ~ 'Being a housewife \nis as fulfilling as working', 
        var == 'gender_exec' ~ 'Men make better \nexecutives than women'
        ))
  ), aes(xintercept = coef), linetype = "dashed") +
  geom_point(aes(color = country_focus), size = 1.5) +
  tidytext::scale_y_reordered() +
  facet_wrap(~var_desc, scales = 'free') + 
  labs(
    x = 'Proportion of respondents agreeing to the statement',
    y = 'Country',
    title = 'Views on Gender Roles Across Country'
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 3), 
    plot.title = element_text(hjust = .5)
  ) +
  guides(color = guide_legend(title = 'Region'))
```

```{r}
#| label: descriptive_soc_sum_indicators_4
#| code-fold: true

# filtering the soc_sum_wide df, then plotting the visualization
wvs7_soc_sum_wide %>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>%
  filter(var %in% c('happy', 
                    'health')) %>% 
  mutate(var_desc = case_when(
    var == 'happy' ~ 'Are you happy?',
    var == 'health' ~ 'Are you in good health?'
  )) %>% 
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha, 
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul), 
                width = .2) + 
  geom_vline(data = (
    wvs7_global_avg %>% 
      filter(var %in% c('happy', 
                      'health')) %>% 
      mutate(var_desc = case_when(
        var == 'happy' ~ 'Are you happy?',
        var == 'health' ~ 'Are you in good health?'
      ))
  ), aes(xintercept = coef), linetype = "dashed") +
  geom_point(aes(color = country_focus)) +
  tidytext::scale_y_reordered() +
  facet_wrap(~var_desc, scales = 'free') + 
  labs(
    x = 'Prop. of respondents saying "yes"',
    y = 'Country',
    title = 'Physical and Mental Well-Being Across Country'
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 3), 
    plot.title = element_text(hjust = .5)
  ) +
  guides(color = guide_legend(title = 'Region'))
```

```{r}
#| label: descriptive_soc_sum_indicators_6
#| code-fold: true

# filtering the soc_sum_wide df, then plotting the visualization
wvs7_soc_sum_wide%>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>%
  filter(var %in% c('trust_fam', 
                    'trust_neighbor', 
                    'trust_first', 
                    'trust_diffrelig')) %>% 
  mutate(var_desc = case_when(
    var == 'trust_fam' ~ 'Family',
    var == 'trust_neighbor' ~ 'Neighborhood',
    var == 'trust_first' ~ 'People you know \npersonally',
    var == 'trust_diffrelig' ~ 'People of another \nreligion'
  )) %>%
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha,
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul),
                width = .2) +
  geom_vline(data = (
    wvs7_global_avg %>% 
      filter(var %in% c('trust_fam', 
                    'trust_neighbor', 
                    'trust_first', 
                    'trust_diffrelig')) %>% 
    mutate(var_desc = case_when(
      var == 'trust_fam' ~ 'Family',
      var == 'trust_neighbor' ~ 'Neighborhood',
      var == 'trust_first' ~ 'People you know \npersonally',
      var == 'trust_diffrelig' ~ 'People of another \nreligion'
    ))
  ), aes(xintercept = coef), linetype = "dashed") +
  geom_point(aes(color = country_focus)) +
  tidytext::scale_y_reordered() +
  facet_wrap(~var_desc, scales = 'free') +
  labs(
    x = 'Prop. of respondents trusting each group',
    y = 'Country',
    title = 'Trust for People Groups Across Countries'
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 3),
    plot.title = element_text(hjust = .5)
  ) +
  guides(color = guide_legend(title = 'Region'))
```

## 3) Data Preparation: Economic and Religious Dimensions

We repeat the above discussed cleaning process for all the following dimensions incorporating survey weights and country by country summary of the social and religious indicators.

```{r}
wvs7_econ_rel <- wvs7_working %>%
  as_survey(weights = c(weight)) %>%
  group_by(country_alpha, region) %>%
  summarise_at(vars(eql_inc:rel_person), survey_mean, na.rm = T) %>% 
  mutate(
    across( c(-1, -ends_with("_se"), -starts_with("pos_"), -starts_with("neg_") ), 
           ~ . + 1.96*get(str_c(cur_column(), '_se')),
           .names = 'pos_{.col}'),
    across( c(-1, -ends_with("_se"), -starts_with("pos_"), -starts_with("neg_") ), 
           ~ . - 1.96*get(str_c(cur_column(), '_se')),
           .names = 'neg_{.col}')
         )
wvs7_econ_rel
```

Reshaping the data for economic and religious indicators

```{r}
wvs7_econ_rel_sum_wide <- wvs7_econ_rel %>% 
  pivot_longer(cols = eql_inc:neg_rel_person,
               names_to = "var",
               values_to = "value") %>% 
  mutate(
    type = case_when(
      str_ends(var, "_se") ~ "se", 
      str_starts(var, "pos_") ~ "ul", 
      str_starts(var, "neg_") ~ "ll", 
      TRUE ~ "coef"
    ),
    var = str_replace(var, "_se$|^pos_|^neg_", "")
  ) %>% 
  pivot_wider(names_from = type, 
              values_from = value) %>% mutate(
    country_focus = ifelse(country_alpha %in% c( 'CHN', 'IND',
                                                'IDN', 'VNM', 'USA'), 
                           'Focus Countries', 'Others')
  )


wvs7_econ_rel_sum_wide
```

## 4) Descriptive Plots: Economic values.

We subset the above data for economic indicators and plot against north american and east asian countries for cleaner plots.

```{r}
wvs7_econ_rel_sum_wide %>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>%
  
  filter(var %in% c('eql_inc','prvt_owner','more_compete','hard_work')) %>% 
  mutate(var_desc = case_when(
    var == 'eql_inc' ~ 'Incomes should be equal',
    var == 'prvt_owner' ~ 'Increase Private onwership of business ', 
    var == 'more_compete' ~ 'More compeititon is good', 
    var == 'hard_work' ~ 'Hard work brings better life'
  )) %>% 
  
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha, 
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul), 
                width = .2) +
  geom_point(aes(color = country_focus)) +
  tidytext::scale_y_reordered() +
  facet_wrap(~var_desc, scales = 'free') +
  
  labs(
    x = 'Weighted mean', 
    y = 'Country',
    title = 'Perceptions on Economic values') +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 5), 
    plot.title = element_text(hjust = .5)
  ) +geom_text(aes(label=ifelse(country_alpha %in% c('CHN','IDN', 'VNM', 'USA'), country_alpha,"")), size = 3.5, nudge_x = 0.045, fontface = 'bold')+
  
  guides(color = guide_legend(title = 'Region'))
```

## 5) Descriptive Plots: Religious Dimensions 

We subset the data now, for religious indicators.

```{r}
wvs7_econ_rel_sum_wide %>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>%
  filter(var %in% c('imp_god','rel_always_right', 'acceptable_rel', 'freq_rel_services', 'rel_person')) %>% 
  
  mutate(var_desc = case_when(
    var == 'imp_god' ~ 'Importance of God in life',
    var ==  'rel_always_right' ~ 'In science v/s religion, \nreligion is \nalways right',
    var == 'acceptable_rel' ~ 'Only acceptable religion \nis own', 
    var == 'freq_rel_services' ~ 'Attend religious services \nat least once a week', var == 'rel_person' ~ 'Considers themselves \nReligious Person '
  )) %>% 
  
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha, 
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul), 
                width = .2) +
  geom_point(aes(color = country_focus)) +
  tidytext::scale_y_reordered() +
  facet_wrap(~var_desc, scales = 'free') + 
  
  labs(
    x = 'Weighted mean', 
    y = 'Country',
    title = 'Perceptions on Religious values'
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 5), 
    plot.title = element_text(hjust = .5)
  ) +geom_text(aes(label=ifelse(country_alpha %in% c('CHN','IDN', 'VNM', 'USA'), country_alpha,"")), size = 3.5, nudge_x = 0.045, fontface = 'bold')+
  
  guides(color = guide_legend(title = 'Region'))
```

## 6) Data Preparation: Political Dimensions

We generate reshaped dataframes for political values as done for previous sections.

```{r}
wvs7_pol <- wvs7_working %>%
  as_survey(weights = c(weight)) %>%
  group_by(country_alpha, region) %>%
  summarise_at(vars(interest_in_politics:political_views), survey_mean, na.rm = T) %>% 
  mutate(
    across( c(-1, -ends_with("_se"), -starts_with("pos_"), -starts_with("neg_") ), 
           ~ . + 1.96*get(str_c(cur_column(), '_se')),
           .names = 'pos_{.col}'),
    across( c(-1, -ends_with("_se"), -starts_with("pos_"), -starts_with("neg_") ), 
           ~ . - 1.96*get(str_c(cur_column(), '_se')),
           .names = 'neg_{.col}')
         )
wvs7_pol
```

```{r}
wvs7_pol_sum_wide <- wvs7_pol %>% 
  pivot_longer(cols = interest_in_politics:neg_political_views,
               names_to = "var",
               values_to = "value") %>% 
  mutate(
    type = case_when(
      str_ends(var, "_se") ~ "se", 
      str_starts(var, "pos_") ~ "ul", 
      str_starts(var, "neg_") ~ "ll", 
      TRUE ~ "coef"
    ),
    var = str_replace(var, "_se$|^pos_|^neg_", "")
  ) %>% 
  pivot_wider(names_from = type, 
              values_from = value) %>% mutate(
    country_focus = ifelse(country_alpha %in% c('CHN','IDN', 'VNM', 'USA'), 
                           'Focus Countries', 'Others')
  )


wvs7_pol_sum_wide
```

## 7) Descriptive Plots: Political Dimension

Plotting interest in politics and discussing political matters.

```{r}
wvs7_pol_sum_wide %>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>%
  filter(var %in% c('interest_in_politics','discuss_political_matter')) %>% 
  mutate(var_desc = case_when(
    var == 'interest_in_politics' ~ 'Interest in Politics',
    var == 'discuss_political_matter' ~ 'Discuss Political Matter'
  )) %>% 
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha, 
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul), 
                width = .5) +
  geom_point(aes(color = country_focus)) +
  tidytext::scale_y_reordered() +
  facet_wrap(~var_desc, scales = 'free') + 
  labs(
    x = 'Weighted mean', 
    y = 'Country',
    title = 'Political Perceptions'
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 7), 
    plot.title = element_text(hjust = 2)
  ) +
  guides(color = guide_legend(title = 'Region'))

```

Plotting signing a petition, joining boycotts, peaceful demonstrations and unofficial strikes

```{r}
wvs7_pol_sum_wide %>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>% 
  filter(var %in% c('signing_a_petition','joining_boycott','peaceful_demonstration','unofficial_strikes')) %>% 
  mutate(var_desc = case_when(
    var == 'signing_a_petition' ~ 'Signing a Petition',
    var == 'joining_boycott' ~ 'Joining a Boycott',
    var == 'peaceful_demonstration' ~ 'Peaceful Demonstration',
    var == 'unofficial_strikes' ~ 'Unofficial Strikes'
  )) %>% 
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha, 
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul), 
                width = .5) +
  geom_point(aes(color = country_focus)) +
  tidytext::scale_y_reordered() +
  facet_wrap(~var_desc, scales = 'free') + 
  labs(
    x = 'Weighted mean', 
    y = 'Country',
    title = 'Political Perceptions'
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 5), 
    plot.title = element_text(hjust = 2)
  ) +
  guides(color = guide_legend(title = 'Region'))
```

Plotting having a strong leader, desire for a democratic political system

```{r}
wvs7_pol_sum_wide %>% filter(region %in% c('East Asia-Pacific','North America', 'South Asia')) %>%
  filter(var %in% c('Having_strong_leader','democratic_political_system')) %>% 
  mutate(var_desc = case_when(
    var == 'Having_strong_leader' ~ 'Having a strong leader',
    var == 'democratic_political_system' ~ 'Having a democratic system'
  )) %>% 
  ggplot(aes(x = coef, y = tidytext::reorder_within(country_alpha, 
                                                    coef, var_desc))) +
  geom_errorbar(aes(xmin = ll, xmax = ul), 
                width = .5) +
  geom_point(aes(color = country_focus)) +
  tidytext::scale_y_reordered() +
  facet_wrap(~var_desc, scales = 'free') + 
  labs(
    x = 'Weighted mean', 
    y = 'Country',
    title = 'Political Culture'
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 7), 
    plot.title = element_text(hjust = 2)
  ) +
  guides(color = guide_legend(title = 'Region'))
```

# Quantitative Analysis

## 1) Defining the regression functions

We define a template function for running the regressions, and also a helper function to tidy up the model results (eg transforming log odds standard errors to odds ratio ones).

```{r}
#| label: reg_function 

# defining the regression function
reg_func <- function(yvar) {
  
  # defining the regression function
  result <- glm(eval(parse(text = yvar)) ~ 
                  relevel(factor(country_iso), ref = "United States") + 
                  sex + age + immigrant + marital + 
                  educ_group + work + income_3, 
                data = wvs7_working)
  
  # outputting the result
  result
}

# defining the function to get tidy model and obtain the odds-ratio SE
tidy_model <- function(model) {
  
  # following the steps outlined in andrew heiss's blog:
  tidy <- broom::tidy(model) %>%
    mutate(or = exp(estimate),
           var_diag = diag(vcov(model)), 
           or_se = sqrt(or^2 * var_diag), 
           or_ll = or - (1.96*or_se), 
           or_ul = or + (1.96*or_se))
  
  # returning the result
  tidy
}

```

## 2) Running regressions: Social Dimensions 

```{r}
#| label: reg_execution

# storing dep vars of interest in a vector 
dep_vars <- c("important_fam", "important_fr", 
              "neighbor_diffrace", "neighbor_gay", "neighbor_imm",
              "gender_jobs",
              "happy", "health",
              "trust", "trust_fam", "trust_first")

# applying the reg function to all dep_vars 
model_results <- map(dep_vars, reg_func)
names(model_results) <- dep_vars    # assigning the dep_Var names as element name 

# creating a tidy data out of the model results
model_results_df <-  model_results %>% 
  map(tidy_model)

# binding the rows together, creating a single df
model_results_df <- bind_rows(model_results_df, .id = "dep_var") %>% 
  mutate(
    
    # description for the dep. vars
    var_desc = case_when(
      dep_var == "important_fam" ~ "Family", 
      dep_var == "important_fr" ~ "Friends", 
      dep_var == "neighbor_diffrace" ~ "Different race", 
      dep_var == "neighbor_gay" ~ "Homosexuals", 
      dep_var == "neighbor_imm" ~ "Immigrants",
      dep_var == "gender_jobs" ~ "Males have more \nright to jobs", 
      dep_var == "happy" ~ "Happy", 
      dep_var == "health" ~ "Health", 
      dep_var == "trust" ~ "Most people",
      dep_var == "trust_fam" ~ "Family", 
      dep_var == "trust_first" ~ "First-timers"
    )
  )

```

## 3) Plotting regression results: Social Dimensions 

```{r}
#| label: reg_plot

# removing the pattern
rm_pattern <- 'relevel\\(factor\\(country_iso\\), ref = "United States"\\)'

# defining the plot function
multimodel_plot <- function(depvar, dodge_width = .3, title) {
  
  model_results_df %>% 
  filter(dep_var %in% depvar,
         str_detect(term, 'Indonesia|Vietnam|China')) %>% 
  mutate(term = str_replace_all(term, rm_pattern, "")) %>% 
  ggplot(aes(x = term, y = or, color = var_desc)) +
  geom_pointrange(aes(ymin = or_ll, ymax = or_ul),
                  position = position_dodge(width = dodge_width)) +
  geom_hline(aes(yintercept = 1)) +
  labs(
    y = "Odds ratio",
    title = title
  ) +
  theme_classic() +
  scale_color_discrete(name=NULL) +
  theme(
    plot.title = element_text(hjust = .5, size = 10),
    legend.text = element_text(size = 7),
    axis.title.x = element_blank(),
    axis.title.y = element_text(size = 7.5)
  ) 
}

# life priorities plot
p1 <- multimodel_plot(depvar = c("important_fam", "important_fr"),
                      dodge_width = .2,
                      title = "Importance of family and friends")

# tolerance plot
p2 <- multimodel_plot(depvar = c("neighbor_gay", "neighbor_diffrace", 
                           "neighbor_imm"),
                      dodge_width = .2,
                      title = "Espousing intolerance towards \nmarginalized groups")

# gender view
p3 <- multimodel_plot(depvar = c("gender_jobs"),
                      dodge_width = 0,
                      title = "Espousing patriarchal views")

# well-being view
p4 <- multimodel_plot(depvar = c("happy", "health"),
                      dodge_width = .3,
                      title = "Well-being")


# social capital
p5 <- multimodel_plot(depvar = c("trust", "trust_fam", "trust_first"),
                      dodge_width = .3,
                      title = "Trust")

# plotting in a grid
ggpubr::ggarrange(p1, 
                  p2 + ggpubr::rremove("x.text") + ggpubr::rremove("x.title"), 
                  p3 + ggpubr::rremove("x.text") + ggpubr::rremove("x.title"),
                  p4 + ggpubr::rremove("x.text") + ggpubr::rremove("x.title"),
                  p5 + ggpubr::rremove("x.text") + ggpubr::rremove("x.title"),
                  nrow = 3, ncol = 2)
```

## 4) Running regressions: Economic Dimensions 

```{r}
#| label: reg_execution_econ

# storing dep vars of interest in a vector 
dep_vars <- c('eql_inc','prvt_owner','more_compete','hard_work')

# applying the reg function to all dep_vars 
model_results <- map(dep_vars, reg_func)
names(model_results) <- dep_vars    # assigning the dep_Var names as element name 

# creating a tidy data out of the model results
model_results_df <-  model_results %>% 
  map(tidy_model)

# binding the rows together, creating a single df
model_results_df <- bind_rows(model_results_df, .id = "dep_vars") %>% 
  mutate(
    
    # description for the dep. vars
    var_desc = case_when(
    dep_vars == 'eql_inc' ~ 'Incomes should be equal',
    dep_vars == 'prvt_owner' ~ 'Private Ownership of business \nshould be increased ', 
    dep_vars == 'more_compete' ~ 'More compeititon is good', 
    dep_vars == 'hard_work' ~ 'Hard work brings better life'
    )
  )
```

```{r}
model_results_df
```

## 5) Plotting regression results: Economic Values

```{r}
#| label: reg_plot_econ

# removing the pattern
rm_pattern <- 'relevel\\(factor\\(country_iso\\), ref = "United States"\\)'

# defining the plot function
multimodel_plot <- function(depvar, dodge_width = .3, title) {
  
  model_results_df %>% 
  filter(dep_vars %in% depvar,
         str_detect(term, 'Indonesia|Vietnam|China')) %>% 
  mutate(term = str_replace_all(term,rm_pattern, "")) %>%
  ggplot(aes(x = term, y = or, color = var_desc)) +theme(plot.title = element_text(hjust = 0.5))+
  geom_pointrange(aes(ymin = or_ll, ymax = or_ul),
                  position = position_dodge(width = dodge_width)) +
  geom_hline(aes(yintercept = 1)) +
  labs(
    y = "Odds ratio",
    title = title
  ) +
  theme_classic()  +
  theme(
    plot.title = element_text(hjust = .5, size = 11, face = 'bold'),
    legend.text = element_text(size = 7),
    axis.title.x = element_blank(),
    axis.title.y = element_text(size = 7.5)
    
  ) 
}

# Income equality 
p1 <- multimodel_plot(depvar = c("eql_inc",'hard_work'),
                      dodge_width = 0,
                      title = "Income") + scale_color_manual(values = c("purple",'orange')) + theme(legend.title=element_blank())

# Business and competition
p2 <- multimodel_plot(depvar = c("prvt_owner", 'more_compete'),
                      dodge_width = .3,
                      title = 'Business') + scale_color_manual(values = c("red",'green'))  + theme(legend.title=element_blank())


# plotting in a grid
ggpubr::ggarrange(p1, 
                  p2 + ggpubr::rremove("x.title"), nrow =2)
```

## 6) Running Regressions: Religious values

```{r}
#| label: reg_execution_rel
  
# storing dep vars of interest in a vector 
dep_vars <- c('imp_god','rel_always_right', 'acceptable_rel', 'freq_rel_services', 'rel_person')

# applying the reg function to all dep_vars 
model_results <- map(dep_vars, reg_func)
names(model_results) <- dep_vars    # assigning the dep_Var names as element name 

# creating a tidy data out of the model results
model_results_df <-  model_results %>% 
  map(tidy_model)

# binding the rows together, creating a single df
model_results_df <- bind_rows(model_results_df, .id = "dep_vars") %>% 
  mutate(
    
    # description for the dep. vars
    var_desc = case_when(
    dep_vars == 'imp_god' ~ 'Importance of God in life',
    dep_vars ==  'rel_always_right' ~ 'In science v/s religion, \nreligion is \nalways right',
    dep_vars == 'acceptable_rel' ~ 'Only acceptable religion \nis own', 
    dep_vars == 'freq_rel_services' ~ 'Attend religious services \nat least once a week',   
    dep_vars == 'rel_person' ~ 'Considers themselves \nReligious Person '
    )
  )
```

## 7) Plotting regression results: Religious Values

```{r}


# removing the pattern
rm_pattern <- 'relevel\\(factor\\(country_iso\\), ref = "United States"\\)'

# defining the plot function
multimodel_plot <- function(depvar, dodge_width = .3, title) {
  
  model_results_df %>% 
  filter(dep_vars %in% depvar,
         str_detect(term, 'Indonesia|Vietnam|China')) %>% 
  mutate(term = str_replace_all(term, rm_pattern, "")) %>% 
  ggplot(aes(x = term, y = or, color = var_desc)) +facet_wrap(.~var_desc,scales = 'free', ncol = 2) +theme(plot.title = element_text(hjust = 0.5))+
  geom_pointrange(aes(ymin = or_ll, ymax = or_ul),
                  position = position_dodge(width = dodge_width)) +
  geom_hline(aes(yintercept = 1)) +
  labs(
    y = "Odds ratio",
    title = title
  ) +
  theme_classic() +
  scale_color_discrete(name=NULL) +
  theme(
    plot.title = element_text(hjust = .5, size = 10),
    legend.text = element_text(size = 7),
    axis.title.x = element_blank(),
    axis.title.y = element_text(size = 7.5)
  ) + scale_y_continuous(n.breaks=5) 
}

# religious beliefs plot 
p1 <- multimodel_plot(depvar = c('imp_god','rel_always_right', 'acceptable_rel', 'rel_person'),
                      dodge_width = .2,
                      title = "Religious Values")


# plotting in a grid
ggpubr::ggarrange(p1)
```

## 8) Running Regressions: Political Values

```{r}
# storing dep vars of interest in a vector 
dep_vars <- c("interest_in_politics", "discuss_political_matter",'signing_a_petition','joining_boycott','peaceful_demonstration','unofficial_strikes','Having_strong_leader','democratic_political_system','political_views')

# applying the reg function to all dep_vars 
model_results <- map(dep_vars, reg_func)
names(model_results) <- dep_vars    # assigning the dep_Var names as element name 

# creating a tidy data out of the model results
model_results_df <-  model_results %>% 
  map(tidy_model)

# binding the rows together, creating a single df
model_results_df <- bind_rows(model_results_df, .id = "dep_var") %>% 
  mutate(
    
    # description for the dep. vars
    var_desc = case_when(
      dep_var == "interest_in_politics" ~ "Interest In Politics", 
      dep_var == "discuss_political_matter" ~ "PoliticalMatter",
      dep_var == "signing_a_petition" ~ "Petition",
      dep_var == "joining_boycott" ~ "Boycott",
      dep_var == "peaceful_demonstration" ~ "Demonstration",
      dep_var == "unofficial_strikes" ~ "Strikes",
      dep_var == "Having_strong_leader" ~ "Strong Leader",
      dep_var == "democratic_political_system" ~ "DemPoliticalSysytem",
      dep_var == "political_views" ~ "Political Views"
    )
  )
```

## 9) Plotting regression Results: Political Values

```{r}
# removing the pattern
rm_pattern <- 'relevel\\(factor\\(country_iso\\), ref = "United States"\\)'

# defining the plot function
multimodel_plot <- function(depvar, dodge_width = .3, title) {
  
  model_results_df %>% 
  filter(dep_var %in% depvar,
         str_detect(term, 'Indonesia|Vietnam|China')) %>% 
  mutate(term = str_replace_all(term, rm_pattern, "")) %>% 
  ggplot(aes(x = term, y = or, color = var_desc)) +
  geom_pointrange(aes(ymin = or_ll, ymax = or_ul),
                  position = position_dodge(width = dodge_width)) +
  geom_hline(aes(yintercept = 1)) +
  labs(
    y = "Odds ratio",
    title = title
  ) +
  theme_classic() +
  scale_color_discrete(name=NULL) +
  theme(
    plot.title = element_text(hjust = .5, size = 10),
    legend.text = element_text(size = 7),
    axis.title.x = element_blank(),
    axis.title.y = element_text(size = 7.5)
  ) 
}


p1 <- multimodel_plot(depvar = c("interest_in_politics","discuss_political_matter"),
                      dodge_width = .2,
                      title = "Political Matter")


p2 <- multimodel_plot(depvar = c("signing_a_petition","joining_boycott"),
                      dodge_width = .2,
                      title = "Discuss Political Matter")


p3 <- multimodel_plot(depvar = c("peaceful_demonstration","unofficial_strikes"),
                     dodge_width = 0,
                      title = "Espousing patriarchal views")


p4 <- multimodel_plot(depvar = c("Having_strong_leader", "democratic_political_system"),
                      dodge_width = .3,
                      title = "Well-being")



p5 <- multimodel_plot(depvar = c("political_views"),
                      dodge_width = .3,
                      title = "Trust")

# plotting in a grid
ggpubr::ggarrange(p1, 
                  p2 + ggpubr::rremove("x.text") + ggpubr::rremove("x.title"), 
                  p3 + ggpubr::rremove("x.text") + ggpubr::rremove("x.title"),
                  p4 + ggpubr::rremove("x.text") + ggpubr::rremove("x.title"),
                  p5 + ggpubr::rremove("x.text") + ggpubr::rremove("x.title"),
                  nrow = 3, ncol = 2)
```
